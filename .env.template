PROMETHEUS_API_URL=
PROMETHEUS_API_USER=
PROMETHEUS_API_PASSWORD=
DEFAULT_THRESHOLD=80
PQL_NS=kube_namespace_labels
PQL_PVC_USAGE=sum by (namespace,persistentvolumeclaim) (kubelet_volume_stats_used_bytes{service="kube-prometheus-stack-kubelet"}/kubelet_volume_stats_capacity_bytes{service="kube-prometheus-stack-kubelet"} * 100)
PQL_PVC_TOTAL=sum by (namespace,persistentvolumeclaim) (kubelet_volume_stats_capacity_bytes{service="kube-prometheus-stack-kubelet"})
PQL_POD_STATUS=sum by(namespace,pod,phase) (kube_pod_status_phase{job="kube-state-metrics"} > 0)
PQL_POD_CPU_USAGE=sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{}) by (pod,namespace)
PQL_POD_MEMORY_USAGE=sum(container_memory_working_set_bytes{container!="", image!=""}) by (pod,namespace)
PQL_NODE_UNAME=group by (nodename,instance) (node_uname_info{origin_prometheus=~"",job=~"node-exporter"} - 0)
PQL_NODE_MEMORY_USAGE=(node_memory_Buffers_bytes{origin_prometheus=~"",job=~"node-exporter"}+node_memory_Cached_bytes{origin_prometheus=~"",job=~"node-exporter"}) / node_memory_MemTotal_bytes{origin_prometheus=~"",job=~"node-exporter"} * 100
PQL_NODE_MEMORY_TOTAL=sum(kube_node_status_allocatable {resource="memory"}) by (node)
PQL_NODE_DISK_USAGE=max((node_filesystem_size_bytes{origin_prometheus=~"",job=~"node-exporter",fstype=~"ext.?|xfs"}-node_filesystem_free_bytes{origin_prometheus=~"",job=~"node-exporter",fstype=~"ext.?|xfs"}) *100/(node_filesystem_avail_bytes {origin_prometheus=~"",job=~"node-exporter",fstype=~"ext.?|xfs"}+(node_filesystem_size_bytes{origin_prometheus=~"",job=~"node-exporter",fstype=~"ext.?|xfs"}-node_filesystem_free_bytes{origin_prometheus=~"",job=~"node-exporter",fstype=~"ext.?|xfs"})))by(instance)
PQL_NODE_DISK_TOTAL=sum(kube_node_status_allocatable {resource="ephemeral_storage"}) by (node)
PQL_NODE_CPU_USAGE=sum by (instance)((1 - sum without (mode) (rate(node_cpu_seconds_total{job="node-exporter", mode=~"idle|iowait|steal"}[5m]))) / ignoring(cpu) group_left count without (cpu, mode) (node_cpu_seconds_total{job="node-exporter", mode="idle"})) * 100
PQL_NODE_CPU_TOTAL=sum(kube_node_status_allocatable {resource="cpu"}) by (node)
PQL_NODE_POD_USAGE=(count(kube_pod_info{}) by (node) / sum(kube_node_status_allocatable {resource="pods"}) by (node) * 100)
PQL_NODE_POD_TOTAL=sum(kube_node_status_allocatable {resource="pods"}) by (node)